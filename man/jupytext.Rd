% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jupytext.R
\name{jupytext}
\alias{jupytext}
\title{Convert Jupyter Notebooks to (R)Markdown, Julia, Python or R scripts and vice-versa}
\usage{
jupytext(input, to, output = .with_ext(input, to), quiet = FALSE)
}
\arguments{
\item{input}{File path to the input file.}

\item{to}{The format to convert to, should be a file extension for any of the
\href{https://jupytext.readthedocs.io/en/latest/languages.html}{Supported Languages}. Ignored if
\code{output} is specified}

\item{output}{The full path to where the converted file should be written. The format is derived
from the file extension of \code{output}. Takes precedence over \code{to}. By default, the output file
path is set by taking the \code{input} file path and replacing the file extension with \code{to}.}

\item{quiet}{Logical, whether to show an informative message about which file is getting
converted.}
}
\value{
The file path to the output file, invisibly. This function is mainly called for its side
effects.
}
\description{
\code{juptext()} provides a convenient R wrapper for the Python
\href{https://jupytext.readthedocs.io/en/latest/using-library.html}{\code{jupytext} API}
allowing the user to convert between any of the
\href{https://jupytext.readthedocs.io/en/latest/formats.html}{supported formats} from within R.
}
\details{
Internally, this function calls the Python \code{jupytext.read} on the input file and then
writes it to the desired format using \code{jupytext.write}, using the
\href{https://jupytext.readthedocs.io/en/latest/using-library.html}{\code{jupytext} API}.
}
\examples{
library(jupytextR)

## Create toy RMarkdown file
rmd_data <- "Hi **Markdown**!

```{r}
print(\"Hi R Markdown!\")
```
"
rmd_file <- tempfile(fileext = ".Rmd")
writeLines(rmd_data, rmd_file)

## Convert Rmd file to a jupyter notebook
jupytext(rmd_file, to = "ipynb")
}
